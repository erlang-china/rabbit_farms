{"name":"Rabbit farms","tagline":"Rabbit farms is a standalone service for publish RabbitMQ messages","body":"rabbit_farms\r\n============\r\n\r\nRabbit farms is a standalone service for publish RabbitMQ messages that cast by another erlang apps.\r\n\r\n#####This is a beta version.\r\n\r\n###Usage scenario\r\n-------\r\nThe others erlang app publish the messages to the RabbitMQ without reference amqp_client libs, \r\nuse it just like gen_server call and cast.\r\n\r\n\r\n###Usage:\r\n-------\r\nconfig the `rabbit_famrs.app`\r\n\r\n    {env, [{rabbit_farms,[tracking]},\r\n    \t     {farm_tracking,[{username, <<\"guest\">>},\r\n              \t\t\t\t\t\t {password, <<\"V2pOV2JHTXpVVDA9\">>}, %% three_times_base64(\"guest\")\r\n              \t\t\t\t\t\t {virtual_host, <<\"/\">>},\r\n              \t\t\t\t\t\t {host, \"localhost\"},\r\n              \t\t\t\t\t\t {port, 5672},\r\n                           {feeders,[\r\n                                      [{channel_count,1},\r\n                                       {exchange, <<\"tracking.logs\">>},\r\n                                       {type, <<\"topic\">>}]\r\n                                    ]}\r\n                           ]}\r\n    ]}\r\n\r\n####publish \r\n    1>RabbitCarrot = #rabbit_carrot{farm_name = tracking, exchange = <<\"tracking.logs\">>, \r\n                     routing_key = <<\"routing_key\">>, \r\n                     message = <<\"\">>}.\r\n      #rabbit_carrot{farm_name = tracking,\r\n               exchange = <<\"tracking.logs\">>,\r\n               routing_key = <<\"routing_key\">>,message = <<>>,\r\n               content_type = undefined}\r\n\r\n    2>rabbit_farms:publish(cast, RabbitCarrot). %%asynchronous\r\n    3>rabbit_farms:publish(call, RabbitCarrot). %%synchronization\r\n\r\n####batch publish\r\n    1>Body1 = #rabbit_carrot_body{routing_key = <<\"routing_key\">>, message = <<\"message1\">>}.\r\n      #rabbit_carrot_body{routing_key = <<\"routing_key1\">>,\r\n                    message = <<\"message1\">>}\r\n                    \r\n    2>Body2 = #rabbit_carrot_body{routing_key = <<\"routing_key\">>, message = <<\"message2\">>}.\r\n      #rabbit_carrot_body{routing_key = <<\"routing_key2\">>,\r\n                    message = <<\"message2\">>}\r\n                    \r\n    3>RabbitCarrots = #rabbit_carrots{farm_name            = tracking,\r\n                                      exchange             = <<\"tracking.logs\">>, \r\n                                      rabbit_carrot_bodies = [Body1,Body2]}.\r\n    \r\n      #rabbit_carrots{\r\n                        farm_name = tracking,exchange = <<\"tracking.logs\">>,\r\n                        rabbit_carrot_bodies = \r\n                            [#rabbit_carrot_body{\r\n                                 routing_key = <<\"routing_key\">>,\r\n                                 message = <<\"message1\">>},\r\n                             #rabbit_carrot_body{\r\n                                 routing_key = <<\"routing_key\">>,\r\n                                 message = <<\"message2\">>}],\r\n                        content_type = undefined}\r\n\r\n    4>rabbit_farms:publish(cast, RabbitCarrots). %%asynchronous\r\n    5>rabbit_farms:publish(call, RabbitCarrots). %%synchronization\r\n","google":"UA-40501533-1","note":"Don't delete this file! It's used internally to help with page regeneration."}